package yandex

/** Даны даты заезда и отъезда каждого гостя. Для каждого гостя дата заезда строго раньше даты
  * отъезда (то есть каждый гость останавливается хотя бы на одну ночь). В пределах одного дня
  * считается, что сначала старые гости выезжают, а затем въезжают новые. Найти максимальное число
  * постояльцев, которые одновременно проживали в гостинице (считаем, что измерение количества
  * постояльцев происходит в конце дня).
  *
  * [(1, 2), (1, 3), (2, 4), (2, 3)]
  *
  * [(0, 1), (1, 2), (1, 4)]
  */
object Intervals {

  def overlapping(xs: List[(Int, Int)]): Int =
    xs
      .flatMap { case (l, r) => List((l, 1), (r, 0)) }
      .sorted
      .foldLeft((0, 0)) { case ((n, m), (_, op)) =>
        if (op == 1) (n + 1, (n + 1).max(m))
        else (n - 1, m)
      }
      ._2

}
